name: Release Dark Room Game

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Dark Room ${{ steps.get_version.outputs.version }}
          body: |
            ## Dark Room Game Release ${{ steps.get_version.outputs.version }}
            
            ### Downloads
            - **Android APK**: For Android phones and tablets
            - **Android AAB**: For Google Play Store distribution
            - **iOS Build**: For iOS devices (requires signing)
            - **Windows**: For Windows PC
            - **macOS**: For Mac computers
            - **Linux**: For Linux distributions
            - **Web**: Play in browser
            
            ### Changes in this release
            Please see the commit history for detailed changes.
            
            ### Installation Notes
            - **Android**: Enable "Install from unknown sources" to install APK
            - **iOS**: Requires proper signing and provisioning profiles
            - **Desktop**: Extract and run the executable
            - **Web**: Host the web build files on a web server
          draft: false
          prerelease: false

  # Build all platforms for release
  build-release:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: android
            build-cmd: |
              flutter build apk --release
              flutter build appbundle --release
            artifact-path: |
              build/app/outputs/flutter-apk/app-release.apk
              build/app/outputs/bundle/release/app-release.aab
            
          - os: ubuntu-latest
            platform: web
            build-cmd: flutter build web --release
            artifact-path: build/web
            
          - os: ubuntu-latest
            platform: linux
            build-cmd: flutter build linux --release
            artifact-path: build/linux/x64/release/bundle
            setup-cmd: |
              sudo apt-get update
              sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
            
          - os: macos-latest
            platform: ios
            build-cmd: flutter build ios --release --no-codesign
            artifact-path: build/ios/iphoneos
            
          - os: macos-latest
            platform: macos
            build-cmd: flutter build macos --release
            artifact-path: build/macos/Build/Products/Release
            
          - os: windows-latest
            platform: windows
            build-cmd: flutter build windows --release
            artifact-path: build/windows/x64/runner/Release

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Java (for Android)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup platform dependencies
        if: matrix.setup-cmd
        run: ${{ matrix.setup-cmd }}
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.1'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build ${{ matrix.platform }}
        run: ${{ matrix.build-cmd }}
      
      # Create platform-specific archives
      - name: Create Android archive
        if: matrix.platform == 'android'
        run: |
          mkdir -p release-artifacts
          cp build/app/outputs/flutter-apk/app-release.apk release-artifacts/dark_room-android.apk
          cp build/app/outputs/bundle/release/app-release.aab release-artifacts/dark_room-android.aab
      
      - name: Create Web archive
        if: matrix.platform == 'web'
        run: |
          mkdir -p release-artifacts
          cd build/web
          tar -czf ../../release-artifacts/dark_room-web.tar.gz *
      
      - name: Create Linux archive
        if: matrix.platform == 'linux'
        run: |
          mkdir -p release-artifacts
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../release-artifacts/dark_room-linux.tar.gz *
      
      - name: Create iOS archive
        if: matrix.platform == 'ios'
        run: |
          mkdir -p release-artifacts
          cd build/ios/iphoneos
          tar -czf ../../../release-artifacts/dark_room-ios.tar.gz Runner.app
      
      - name: Create macOS archive
        if: matrix.platform == 'macos'
        run: |
          mkdir -p release-artifacts
          cd build/macos/Build/Products/Release
          tar -czf ../../../../../release-artifacts/dark_room-macos.tar.gz dark_room.app
      
      - name: Create Windows archive
        if: matrix.platform == 'windows'
        run: |
          mkdir release-artifacts
          Compress-Archive -Path "build/windows/x64/runner/Release/*" -DestinationPath "release-artifacts/dark_room-windows.zip"
      
      # Upload to release
      - name: Upload Android APK
        if: matrix.platform == 'android'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: release-artifacts/dark_room-android.apk
          asset_name: dark_room-${{ needs.create-release.outputs.version }}-android.apk
          asset_content_type: application/vnd.android.package-archive
      
      - name: Upload Android AAB
        if: matrix.platform == 'android'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: release-artifacts/dark_room-android.aab
          asset_name: dark_room-${{ needs.create-release.outputs.version }}-android.aab
          asset_content_type: application/x-authorware-bin
      
      - name: Upload platform archive
        if: matrix.platform != 'android'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: release-artifacts/dark_room-${{ matrix.platform }}.${{ matrix.platform == 'windows' && 'zip' || 'tar.gz' }}
          asset_name: dark_room-${{ needs.create-release.outputs.version }}-${{ matrix.platform }}.${{ matrix.platform == 'windows' && 'zip' || 'tar.gz' }}
          asset_content_type: ${{ matrix.platform == 'windows' && 'application/zip' || 'application/gzip' }}